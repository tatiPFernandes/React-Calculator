{"version":3,"sources":["components/Wrapper.js","components/Screen.js","components/ButtonBox.js","components/Button.js","App.js","index.js"],"names":["Wrapper","children","className","Screen","value","mode","max","ButtonBox","Button","onClick","btnValues","toLocaleString","num","String","replace","removeSpaces","toString","App","useState","sign","res","calc","setCalc","numClickHandler","e","preventDefault","target","innerHTML","length","Number","comaClickHandler","includes","signClickHandler","equalsClickHandler","a","b","invertClickHandler","percentClickHandler","parseFloat","Math","pow","resetClickHandler","flat","map","btn","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f54af50a.chunk.js","sourcesContent":["import './Wrapper.css';\r\n\r\nconst Wrapper = ({children}) =>{\r\n    return <div className = 'wrapper' >{children}</div>\r\n\r\n}\r\n\r\nexport default Wrapper;","import {Textfit} from 'react-textfit';\r\nimport './Screen.css';\r\n\r\nconst Screen = ({value}) =>{\r\n    return(\r\n        <Textfit className='screen' mode='single' max ={70}>{value}</Textfit>\r\n    )\r\n}\r\n\r\nexport default Screen;","import './ButtonBox.css'\r\n\r\nconst ButtonBox =({children}) =>{\r\n    return<div className='buttonBox'>{children}</div>\r\n}\r\n\r\nexport default ButtonBox","import './Button.css'\r\n\r\nconst Button =({className, value , onClick}) =>{\r\n    return(\r\n        <button className ={className} onClick={onClick} >{value}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Screen from \"./components/Screen\";\nimport ButtonBox from \"./components/ButtonBox\";\nimport Button from \"./components/Button\";\n\nconst btnValues = [\n  [\"C\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\n//taking a number, formating it into the string format and create the space separators for the thousand mark.\nconst toLocaleString = (num) =>\n  String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\n  //remove the spaces, convert it to number.\nconst removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\n\nconst App = () => {\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0,\n  });\n\n  const numClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num).length < 16) {\n      setCalc({\n        ...calc,\n        num:\n          calc.num === 0 && value === \"0\"\n            ? \"0\"\n            : removeSpaces(calc.num) % 1 === 0\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\n            : toLocaleString(calc.num + value),\n        res: !calc.sign ? 0 : calc.res,\n      });\n    }\n  };\n\n  const comaClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\n    });\n  };\n\n  const signClickHandler = (e) => {\n    setCalc({\n      ...calc,\n      sign: e.target.innerHTML,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0,\n    });\n  };\n\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) =>\n        sign === \"+\"\n          ? a + b\n          : sign === \"-\"\n          ? a - b\n          : sign === \"X\"\n          ? a * b\n          : a / b;\n\n      setCalc({\n        ...calc,\n        res:\n          calc.num === \"0\" && calc.sign === \"/\"\n            ? \"Can't divide with 0\"\n            : toLocaleString(\n                math(\n                  Number(removeSpaces(calc.res)),\n                  Number(removeSpaces(calc.num)),\n                  calc.sign\n                )\n              ),\n        sign: \"\",\n        num: 0,\n      });\n    }\n  };\n\n  const invertClickHandler = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\",\n    });\n  };\n\n  const percentClickHandler = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n    setCalc({\n      ...calc,\n      num: (num /= Math.pow(100, 1)),\n      res: (res /= Math.pow(100, 1)),\n      sign: \"\",\n    });\n  };\n\n  const resetClickHandler = () => {\n    setCalc({\n      ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Screen value={calc.num ? calc.num : calc.res} />\n      <ButtonBox>\n        {btnValues.flat().map((btn, i) => {\n          return (\n            <Button\n              key={i}\n              className={btn === \"=\" ? \"equals\" : \"\"}\n              value={btn}\n              onClick={\n                btn === \"C\"\n                  ? resetClickHandler\n                  : btn === \"+-\"\n                  ? invertClickHandler\n                  : btn === \"%\"\n                  ? percentClickHandler\n                  : btn === \"=\"\n                  ? equalsClickHandler\n                  : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n                  ? signClickHandler\n                  : btn === \".\"\n                  ? comaClickHandler\n                  : numClickHandler\n              }\n            />\n          );\n        })}\n      </ButtonBox>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}